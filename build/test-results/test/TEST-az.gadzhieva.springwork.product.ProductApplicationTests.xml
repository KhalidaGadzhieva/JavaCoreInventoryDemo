<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="az.gadzhieva.springwork.product.ProductApplicationTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2025-09-29T10:37:13" hostname="DESKTOP-5PA64B6" time="0.295">
  <properties/>
  <testcase name="contextLoads()" classname="az.gadzhieva.springwork.product.ProductApplicationTests" time="0.295"/>
  <system-out><![CDATA[14:37:08.130 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [az.gadzhieva.springwork.product.ProductApplicationTests]: ProductApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:37:08.232 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration az.gadzhieva.springwork.product.ProductApplication for test class az.gadzhieva.springwork.product.ProductApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.0)

14:37:08 INFO  [Test worker] a.g.s.p.ProductApplicationTests - Starting ProductApplicationTests using Java 21.0.7 with PID 3412 (started by ASUS in C:\Users\ASUS\IdeaProjects\JavaCoreInventoryDemo)
14:37:08 DEBUG [Test worker] a.g.s.p.ProductApplicationTests - Running with Spring Boot v3.5.0, Spring v6.2.7
14:37:08 INFO  [Test worker] a.g.s.p.ProductApplicationTests - No active profile set, falling back to 1 default profile: "default"
14:37:10 WARN  [Test worker] org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
Hibernate: create table employee (id bigint generated by default as identity, address_city varchar(255), address_country varchar(255), address_house_number varchar(255), address_street varchar(255), birth_date date, department varchar(255), email varchar(255), first_name varchar(255), hire_date date, hire_order_number varchar(255), last_name varchar(255), notes varchar(255), passport_number varchar(255), phone_number varchar(255), position varchar(255), workplace varchar(255), user_id bigint, primary key (id))
Hibernate: create table firm (id bigint generated by default as identity, address_city varchar(255), address_country varchar(255), address_house_number varchar(255), address_street varchar(255), email varchar(255), inn varchar(255), mobile_number varchar(255), name varchar(255), outstanding_debt numeric(38,2) not null, user_id bigint, primary key (id))
Hibernate: create table invoice (id bigint generated by default as identity, date date, note varchar(255), sum numeric(38,2), firm_id bigint not null, user_id bigint, primary key (id))
Hibernate: create table invoice_product (id bigint generated by default as identity, product_barcode bigint, product_name varchar(255), purchase_price numeric(38,2), quantity bigint, selling_price numeric(38,2), invoice_id bigint not null, user_id bigint, primary key (id))
Hibernate: create table product (id bigint generated by default as identity, barcode bigint, category enum ('ACCESSORIES','ALCOHOL','AUTO_PRODUCTS','BABY_PRODUCTS','BAKERY','BEVERAGES','BOOKS','CANNED_GOODS','CLEANING_PRODUCTS','CLOTHES','DAIRY','ELECTRONICS','FISH','FRESH_FRUITS','FROZEN_PRODUCTS','GARDENING','GROCERY','HOUSEHOLD_ITEMS','HYGIENE','MAKEUP','MEAT','MEDICINE','NON_ALCOHOLIC_DRINKS','PET_PRODUCTS','SEASONAL','SHOES','SKINCARE','SNACKS','SPORTS_EQUIPMENT','STATIONERY','TOYS','VEGETABLES'), name varchar(255), old_purchase_price numeric(38,2), old_selling_price numeric(38,2), purchase_price numeric(38,2), selling_price numeric(38,2), stock bigint not null, unit enum ('KQ','PCS'), firm_id bigint not null, user_id bigint, primary key (id))
Hibernate: create table users (id bigint generated by default as identity, email varchar(255), password varchar(255), role varchar(255), username varchar(255), primary key (id))
Hibernate: alter table if exists users drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
Hibernate: alter table if exists users add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
Hibernate: alter table if exists employee add constraint FKhal2duyxxjtadykhxos7wd3wg foreign key (user_id) references users
Hibernate: alter table if exists firm add constraint FKbfh0sfk3tvovbeog6iwco0huk foreign key (user_id) references users
Hibernate: alter table if exists invoice add constraint FK8mmpjv5t1l92ihn2hg45kej4y foreign key (firm_id) references firm
Hibernate: alter table if exists invoice add constraint FKc8jotskr93810vgn75qlbusw2 foreign key (user_id) references users
Hibernate: alter table if exists invoice_product add constraint FKhrqne4uostar9vds76ynsosov foreign key (invoice_id) references invoice
Hibernate: alter table if exists invoice_product add constraint FKg97lix35wn0qa3qpobq5k9ttt foreign key (user_id) references users
Hibernate: alter table if exists product add constraint FKcgpj9txe118c18c30lsuofhhr foreign key (firm_id) references firm
Hibernate: alter table if exists product add constraint FK47nyv78b35eaufr6aa96vep6n foreign key (user_id) references users
14:37:12 WARN  [Test worker] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
14:37:12 INFO  [Test worker] a.g.s.p.ProductApplicationTests - Started ProductApplicationTests in 4.495 seconds (process running for 5.437)
Hibernate: select u1_0.id,u1_0.email,u1_0.password,u1_0.role,u1_0.username from users u1_0 where u1_0.username=?
Hibernate: insert into users (email,password,role,username,id) values (?,?,?,?,default)
]]></system-out>
  <system-err><![CDATA[Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build as described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org.mockito/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (C:\Users\ASUS\.gradle\caches\modules-2\files-2.1\net.bytebuddy\byte-buddy-agent\1.17.5\58f9507f5f28d1d3e7adfb4ec2fe37c29d332c9b\byte-buddy-agent-1.17.5.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
</testsuite>
